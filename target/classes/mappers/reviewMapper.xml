<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.springProject3.dao.ReviewDao">


	<select id="getRoomIdxCheck" resultType="com.spring.springProject3.vo.ReservationListVo">
		select r.name as roomName, r.idx as roomIdx,
				 	 h.idx as hotelIdx
				   from reservation rs
				   join room r on rs.roomIdx = r.idx
				   join hotel h on r.hotelIdx = h.idx
				   where rs.mid = #{mid} and rs.status ='이용완료' r.idx = #{roomIdx}; 
	</select>
	
	<select id="getRoomReviewList" resultType="com.spring.springProject3.vo.ReviewVo">
		select * from review where roomIdx = #{roomIdx} order by idx desc;
	</select>
	
	<select id="getReviewTotCount" resultType="int">
		select count(idx) from review where hotelIdx = #{hotelIdx};
	</select>
	
	<select id="getRoomReviewAllList" resultType="com.spring.springProject3.vo.ReviewVo">
		select * from review order by idx desc;
	</select>
	
	
	<select id="getRoomUsedAllList" resultType="com.spring.springProject3.vo.ReservationListVo">
		select r.name as roomName, r.roomNumber, r.price, r.maxPeople, r.petSizeLimit, r.petCountLimit, r.thumbnail as roomThumbnail, r.idx as roomIdx,
					 h.name as hotelName, h.thumbnail as hotelThumbnail, h.idx as hotelIdx,
					 rs.idx as reservationIdx,
					 rs.checkinDate,
					 rs.checkoutDate,
					 rs.guestCount,
					 rs.petCount,
					 rs.totalPrice,
					 (select count(*)) as roomTotal
					 from reservation rs
					 join room r on rs.roomIdx = r.idx
					 join hotel h on r.hotelIdx = h.idx
					 where rs.mid = #{mid} and rs.status ='리뷰작성' order by rs.checkinDate desc limit #{startIndexNo},#{pageSize};
	</select>
	
	<!-- 리뷰를 달았는지 확인한다 -->
	<select id="getExistReviewedCheck" resultType="int">
		select idx from reservation where mid = #{mid} and status = '리뷰작성';
	</select>
	
	
	
	<insert id="setReviewInputOk">
		insert into review values (default, #{vo.hotelIdx}, #{vo.roomIdx}, #{vo.reservationIdx}, #{vo.reservationNo}, #{vo.mid},#{vo.nickName}, #{vo.roomName},#{vo.purpose},#{vo.star},#{vo.content},#{vo.hostIp}, default);
	</insert>


	<!-- 리뷰 수정 처리 -->
	<update id="setReviewUpdateCheckOk">
		update review set content = #{vo.content} where idx = #{vo.idx};
	</update>





	<!-- 리뷰 삭제처리 -->
	<delete id="setReviewDelete">
		delete from review where idx = #{idx.idx};
	</delete>
</mapper>